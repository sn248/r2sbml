// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getCmtNames
Rcpp::StringVector getCmtNames(SEXP input_model);
RcppExport SEXP _r2sbml_getCmtNames(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getCmtNames(input_model));
    return rcpp_result_gen;
END_RCPP
}
// getCmtSizes
Rcpp::NumericVector getCmtSizes(SEXP input_model);
RcppExport SEXP _r2sbml_getCmtSizes(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getCmtSizes(input_model));
    return rcpp_result_gen;
END_RCPP
}
// convertReactions
int convertReactions(SEXP infile, SEXP outfile, std::string format);
RcppExport SEXP _r2sbml_convertReactions(SEXP infileSEXP, SEXP outfileSEXP, SEXP formatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type infile(infileSEXP);
    Rcpp::traits::input_parameter< SEXP >::type outfile(outfileSEXP);
    Rcpp::traits::input_parameter< std::string >::type format(formatSEXP);
    rcpp_result_gen = Rcpp::wrap(convertReactions(infile, outfile, format));
    return rcpp_result_gen;
END_RCPP
}
// echoSBML
int echoSBML(SEXP filename);
RcppExport SEXP _r2sbml_echoSBML(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(echoSBML(filename));
    return rcpp_result_gen;
END_RCPP
}
// getRuleMath
int getRuleMath(SEXP input_model);
RcppExport SEXP _r2sbml_getRuleMath(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getRuleMath(input_model));
    return rcpp_result_gen;
END_RCPP
}
// getReactionMath
int getReactionMath(SEXP input_model);
RcppExport SEXP _r2sbml_getReactionMath(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getReactionMath(input_model));
    return rcpp_result_gen;
END_RCPP
}
// getFunctionDefinition
int getFunctionDefinition(SEXP input_model);
RcppExport SEXP _r2sbml_getFunctionDefinition(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getFunctionDefinition(input_model));
    return rcpp_result_gen;
END_RCPP
}
// getEventMath
int getEventMath(SEXP input_model);
RcppExport SEXP _r2sbml_getEventMath(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getEventMath(input_model));
    return rcpp_result_gen;
END_RCPP
}
// getModel
SEXP getModel(SEXP filename);
RcppExport SEXP _r2sbml_getModel(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(getModel(filename));
    return rcpp_result_gen;
END_RCPP
}
// getNumSpecies
int getNumSpecies(SEXP input_model);
RcppExport SEXP _r2sbml_getNumSpecies(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getNumSpecies(input_model));
    return rcpp_result_gen;
END_RCPP
}
// getParameterTable
Rcpp::DataFrame getParameterTable(SEXP input_model);
RcppExport SEXP _r2sbml_getParameterTable(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getParameterTable(input_model));
    return rcpp_result_gen;
END_RCPP
}
// printSBML
int printSBML(SEXP filename);
RcppExport SEXP _r2sbml_printSBML(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(printSBML(filename));
    return rcpp_result_gen;
END_RCPP
}
// getReactionTable
Rcpp::DataFrame getReactionTable(SEXP input_model);
RcppExport SEXP _r2sbml_getReactionTable(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getReactionTable(input_model));
    return rcpp_result_gen;
END_RCPP
}
// getSpeciesNames
Rcpp::StringVector getSpeciesNames(SEXP input_model);
RcppExport SEXP _r2sbml_getSpeciesNames(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getSpeciesNames(input_model));
    return rcpp_result_gen;
END_RCPP
}
// getSpeciesIC
Rcpp::NumericVector getSpeciesIC(SEXP input_model);
RcppExport SEXP _r2sbml_getSpeciesIC(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getSpeciesIC(input_model));
    return rcpp_result_gen;
END_RCPP
}
// getSpeciesTable
Rcpp::DataFrame getSpeciesTable(SEXP input_model);
RcppExport SEXP _r2sbml_getSpeciesTable(SEXP input_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type input_model(input_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(getSpeciesTable(input_model));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_r2sbml_getCmtNames", (DL_FUNC) &_r2sbml_getCmtNames, 1},
    {"_r2sbml_getCmtSizes", (DL_FUNC) &_r2sbml_getCmtSizes, 1},
    {"_r2sbml_convertReactions", (DL_FUNC) &_r2sbml_convertReactions, 3},
    {"_r2sbml_echoSBML", (DL_FUNC) &_r2sbml_echoSBML, 1},
    {"_r2sbml_getRuleMath", (DL_FUNC) &_r2sbml_getRuleMath, 1},
    {"_r2sbml_getReactionMath", (DL_FUNC) &_r2sbml_getReactionMath, 1},
    {"_r2sbml_getFunctionDefinition", (DL_FUNC) &_r2sbml_getFunctionDefinition, 1},
    {"_r2sbml_getEventMath", (DL_FUNC) &_r2sbml_getEventMath, 1},
    {"_r2sbml_getModel", (DL_FUNC) &_r2sbml_getModel, 1},
    {"_r2sbml_getNumSpecies", (DL_FUNC) &_r2sbml_getNumSpecies, 1},
    {"_r2sbml_getParameterTable", (DL_FUNC) &_r2sbml_getParameterTable, 1},
    {"_r2sbml_printSBML", (DL_FUNC) &_r2sbml_printSBML, 1},
    {"_r2sbml_getReactionTable", (DL_FUNC) &_r2sbml_getReactionTable, 1},
    {"_r2sbml_getSpeciesNames", (DL_FUNC) &_r2sbml_getSpeciesNames, 1},
    {"_r2sbml_getSpeciesIC", (DL_FUNC) &_r2sbml_getSpeciesIC, 1},
    {"_r2sbml_getSpeciesTable", (DL_FUNC) &_r2sbml_getSpeciesTable, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_r2sbml(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
